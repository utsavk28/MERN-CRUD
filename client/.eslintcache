[{"D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\index.js":"1","D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\App.js":"2","D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\components\\Navbar.js":"3","D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\components\\Card.js":"4"},{"size":174,"mtime":1609667078442,"results":"5","hashOfConfig":"6"},{"size":910,"mtime":1609667078432,"results":"7","hashOfConfig":"6"},{"size":1735,"mtime":1609682614869,"results":"8","hashOfConfig":"6"},{"size":3241,"mtime":1609682420262,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"582bym",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\index.js",[],["20","21"],"D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\App.js",[],"D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\components\\Navbar.js",[],"D:\\Utsav_Project_Data\\MERN_Projects\\mern-crud\\client\\src\\components\\Card.js",["22"],"/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from \"react\"\r\nimport './card.css';\r\nimport axios from 'axios'\r\nimport TimeAgo from \"javascript-time-ago\";\r\nimport en from \"javascript-time-ago/locale/en\";\r\nTimeAgo.addDefaultLocale(en);\r\n\r\nfunction DateFormatter(x) {\r\n    var z = new Date(x);\r\n    const timeAgo = new TimeAgo(\"en-US\");\r\n    return timeAgo.format(z);\r\n}\r\n\r\nconst Card = (props) => {\r\n    const { title, text, date, _id } = props.post\r\n    const [btnPressed, setBtnPressed] = useState(false)\r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(async () => {\r\n        try {\r\n            const res = await await axios.get(`/api/posts/${_id}`)\r\n            setData({\r\n                ...data,\r\n                title:res.data.title,\r\n                text:res.data.text\r\n            })\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }, [])\r\n\r\n    function updateData(e) {\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    async function updatePost(e) {\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n            const x = {\r\n                ...data,\r\n                date: Date.now()\r\n            }\r\n            const body = JSON.stringify(x)\r\n            const res = await axios.put(`/api/posts/${_id}`, body, config)\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    async function DeleteFunction() {\r\n        try {\r\n            await axios.delete(`/api/posts/${_id}`)\r\n            window.location.reload()\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    function EditFunction() {\r\n        setBtnPressed(!btnPressed)\r\n    }\r\n\r\n    return (\r\n        <div className=\"card w-30\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{title}</h5>\r\n                <p className=\"card-text\">{text}</p>\r\n                <button className=\"btn btn-primary\" onClick={EditFunction}>{btnPressed ? \"Back\" : \"Edit\"}</button>\r\n                {!btnPressed && <button className=\"btn btn-primary\" onClick={DeleteFunction}>Delete</button>}\r\n                {btnPressed && <form>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"title\">Title : </label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"title\" id=\"title\" placeholder=\"Enter title\" value={data.title} onChange={updateData} required />\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"text\">Text : </label>\r\n                        <input type=\"text\" class=\"form-control\" name=\"text\" id=\"text\" placeholder=\"Enter text\" value={data.text} onChange={updateData} required />\r\n                    </div>\r\n                    <button type=\"submit\" class=\"btn btn-primary\" onClick={updatePost}>Submit</button>\r\n                </form>}\r\n                <p className=\"card-text\">{DateFormatter(date)}</p>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default Card;\r\n\r\n\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":54,"column":19,"nodeType":"29","messageId":"30","endLine":54,"endColumn":22},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]